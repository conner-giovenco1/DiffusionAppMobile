{"version":3,"names":["RNGoogleSignin","NativeModules","GoogleSigninButton","onPress","style","rest","useEffect","Platform","OS","clickListener","DeviceEventEmitter","addListener","remove","recommendedSize","size","BUTTON_SIZE_ICON","styles","iconSize","BUTTON_SIZE_WIDE","wideSize","standardSize","Size","Icon","Standard","BUTTON_SIZE_STANDARD","Wide","Color","Dark","BUTTON_COLOR_DARK","Light","BUTTON_COLOR_LIGHT","StyleSheet","create","width","height"],"sources":["GoogleSigninButton.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport { NativeModules, Platform, DeviceEventEmitter, StyleSheet } from 'react-native';\nimport { RNGoogleSigninButton } from './RNGoogleSiginButton';\nimport type { GoogleSigninButtonProps } from './types';\n\ninterface RNGoogleSignStaticsType {\n  BUTTON_SIZE_STANDARD: number;\n  BUTTON_SIZE_WIDE: number;\n  BUTTON_SIZE_ICON: number;\n  BUTTON_COLOR_DARK: number;\n  BUTTON_COLOR_LIGHT: number;\n}\nconst RNGoogleSignin: RNGoogleSignStaticsType = NativeModules.RNGoogleSignin;\n\nexport const GoogleSigninButton = ({ onPress, style, ...rest }: GoogleSigninButtonProps) => {\n  useEffect(() => {\n    if (Platform.OS === 'ios') {\n      return;\n    }\n    const clickListener = DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', () => {\n      onPress?.();\n    });\n    return () => {\n      clickListener.remove();\n    };\n  }, [onPress]);\n\n  const recommendedSize = (() => {\n    switch (rest.size) {\n      case RNGoogleSignin.BUTTON_SIZE_ICON:\n        return styles.iconSize;\n      case RNGoogleSignin.BUTTON_SIZE_WIDE:\n        return styles.wideSize;\n      default:\n        return styles.standardSize;\n    }\n  })();\n\n  // @ts-ignore style prop incompatible\n  return <RNGoogleSigninButton {...rest} onPress={onPress} style={[recommendedSize, style]} />;\n};\n\nGoogleSigninButton.Size = {\n  Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n  Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  Wide: RNGoogleSignin.BUTTON_SIZE_WIDE,\n};\n\nGoogleSigninButton.Color = {\n  Dark: RNGoogleSignin.BUTTON_COLOR_DARK,\n  Light: RNGoogleSignin.BUTTON_COLOR_LIGHT,\n};\n\n// sizes according to https://developers.google.com/identity/sign-in/ios/reference/Classes/GIDSignInButton\nconst styles = StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48,\n  },\n  standardSize: { width: 230, height: 48 },\n  wideSize: { width: 312, height: 48 },\n});\n"],"mappings":";;;;;;AAAA;AAEA;AACA;AAA6D;AAAA;AAAA;AAU7D,MAAMA,cAAuC,GAAGC,0BAAa,CAACD,cAAc;AAErE,MAAME,kBAAkB,GAAG,QAA0D;EAAA,IAAzD;IAAEC,OAAO;IAAEC,KAAK;IAAE,GAAGC;EAA8B,CAAC;EACrF,IAAAC,gBAAS,EAAC,MAAM;IACd,IAAIC,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;MACzB;IACF;IACA,MAAMC,aAAa,GAAGC,+BAAkB,CAACC,WAAW,CAAC,6BAA6B,EAAE,MAAM;MACxFR,OAAO,aAAPA,OAAO,uBAAPA,OAAO,EAAI;IACb,CAAC,CAAC;IACF,OAAO,MAAM;MACXM,aAAa,CAACG,MAAM,EAAE;IACxB,CAAC;EACH,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EAEb,MAAMU,eAAe,GAAG,CAAC,MAAM;IAC7B,QAAQR,IAAI,CAACS,IAAI;MACf,KAAKd,cAAc,CAACe,gBAAgB;QAClC,OAAOC,MAAM,CAACC,QAAQ;MACxB,KAAKjB,cAAc,CAACkB,gBAAgB;QAClC,OAAOF,MAAM,CAACG,QAAQ;MACxB;QACE,OAAOH,MAAM,CAACI,YAAY;IAAC;EAEjC,CAAC,GAAG;;EAEJ;EACA,oBAAO,6BAAC,yCAAoB,eAAKf,IAAI;IAAE,OAAO,EAAEF,OAAQ;IAAC,KAAK,EAAE,CAACU,eAAe,EAAET,KAAK;EAAE,GAAG;AAC9F,CAAC;AAAC;AAEFF,kBAAkB,CAACmB,IAAI,GAAG;EACxBC,IAAI,EAAEtB,cAAc,CAACe,gBAAgB;EACrCQ,QAAQ,EAAEvB,cAAc,CAACwB,oBAAoB;EAC7CC,IAAI,EAAEzB,cAAc,CAACkB;AACvB,CAAC;AAEDhB,kBAAkB,CAACwB,KAAK,GAAG;EACzBC,IAAI,EAAE3B,cAAc,CAAC4B,iBAAiB;EACtCC,KAAK,EAAE7B,cAAc,CAAC8B;AACxB,CAAC;;AAED;AACA,MAAMd,MAAM,GAAGe,uBAAU,CAACC,MAAM,CAAC;EAC/Bf,QAAQ,EAAE;IACRgB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC;EACDd,YAAY,EAAE;IAAEa,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAG,CAAC;EACxCf,QAAQ,EAAE;IAAEc,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAG;AACrC,CAAC,CAAC"}